{"version":3,"sources":["Components/Card.js","misc/images.js","misc/shuffle.js","Components/Scoreboard.js","Components/GameContainer.js","App.js","index.js"],"names":["Card","props","className","onClick","handleClick","id","src","alt","name","images","url","clicked","shuffle","array","tempVal","randIndex","currIndex","length","Math","floor","random","Scoreboard","score","highScore","GameContainer","useState","cards","setCards","setScore","setHighScore","map","card","console","log","restart","useEffect","alert","img","uniqid","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+LAWeA,MATf,SAAcC,GACZ,OACE,sBAAKC,UAAU,OAAOC,QAAS,kBAAMF,EAAMG,YAAYH,EAAMI,KAA7D,UACE,qBAAKC,IAAKL,EAAMK,IAAKC,IAAKN,EAAMO,OAChC,4BAAIP,EAAMO,W,gBCuBDC,EA7BF,CACX,CAAEC,IAAK,sBAAuBF,KAAM,SAAUG,SAAS,EAAON,GAAI,GAClE,CAAEK,IAAK,qBAAsBF,KAAM,QAASG,SAAS,EAAON,GAAI,GAChE,CAAEK,IAAK,uBAAwBF,KAAM,UAAWG,SAAS,EAAON,GAAI,GACpE,CAAEK,IAAK,qBAAsBF,KAAM,QAASG,SAAS,EAAON,GAAI,GAChE,CAAEK,IAAK,uBAAwBF,KAAM,UAAWG,SAAS,EAAON,GAAI,GACpE,CAAEK,IAAK,qBAAsBF,KAAM,QAASG,SAAS,EAAON,GAAI,GAChE,CACEK,IAAK,4BACLF,KAAM,UACNG,SAAS,EACTN,GAAI,GAEN,CAAEK,IAAK,sBAAuBF,KAAM,QAASG,SAAS,EAAON,GAAI,GACjE,CAAEK,IAAK,uBAAwBF,KAAM,SAAUG,SAAS,EAAON,GAAI,GACnE,CAAEK,IAAK,oBAAqBF,KAAM,MAAOG,SAAS,EAAON,GAAI,IAC7D,CAAEK,IAAK,sBAAuBF,KAAM,SAAUG,SAAS,EAAON,GAAI,IAClE,CAAEK,IAAK,uBAAwBF,KAAM,UAAWG,SAAS,EAAON,GAAI,IACpE,CAAEK,IAAK,wBAAyBF,KAAM,UAAWG,SAAS,EAAON,GAAI,IACrE,CAAEK,IAAK,uBAAwBF,KAAM,UAAWG,SAAS,EAAON,GAAI,IACpE,CACEK,IAAK,wBACLF,KAAM,gBACNG,SAAS,EACTN,GAAI,IAEN,CAAEK,IAAK,qBAAsBF,KAAM,QAASG,SAAS,EAAON,GAAI,KC1BnD,SAASO,EAAQC,GAM9B,IAJA,IACIC,EACAC,EAFAC,EAAYH,EAAMI,OAIf,IAAMD,GACXD,EAAYG,KAAKC,MAAMD,KAAKE,SAAWJ,GACvCA,GAAa,EAEbF,EAAUD,EAAME,GAChBF,EAAME,GAAaF,EAAMG,GACzBH,EAAMG,GAAaF,EAErB,OAAOD,ECMMQ,MAlBf,SAAoBpB,GAClB,OACE,qBAAKC,UAAU,iBAAf,SACE,sBAAKA,UAAU,aAAf,UACE,sBAAKA,UAAU,QAAf,UACE,wCACS,+BAAOD,EAAMqB,WAEtB,6CACc,+BAAOrB,EAAMsB,kBAG7B,qBAAKjB,IAAK,oBAAqBC,IAAI,eC8E5BiB,MArFf,WACE,MAA0BC,mBAASb,EAAQH,IAA3C,mBAAOiB,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAS,GAAnC,mBAAOH,EAAP,KAAcM,EAAd,KACA,EAAkCH,mBAAS,GAA3C,mBAAOF,EAAP,KAAkBM,EAAlB,KAEA,SAAS1B,EAAQE,GACfsB,EACED,EAAMI,KAAI,SAACC,GAUT,OATIA,EAAK1B,KAAOA,IAAuB,IAAjB0B,EAAKpB,SACzBqB,QAAQC,IAAI,QACZC,KACSH,EAAK1B,KAAOA,IACrB2B,QAAQC,IAAI,QACZL,EAASN,EAAQ,GACjBS,EAAKpB,SAAU,GAGVoB,MAYb,SAASG,IACHZ,EAAQC,GACVM,EAAaP,GAOfK,EACED,EAAMI,KAAI,SAACC,GAGT,OAFAA,EAAKpB,SAAU,EAERoB,MARXH,EAAS,GAqBX,OARAO,qBAAU,WACRR,EAASf,EAAQc,MAChB,CAACA,IAEJS,qBAAU,WA5BM,KAAVb,IACFc,MAAM,wCACNF,QA+BF,gCACE,8BACE,mCACE,gCACE,0DACA,oGAIF,cAAC,EAAD,CAAYZ,MAAOA,EAAOC,UAAWA,SAGzC,qBAAKrB,UAAU,WAAf,SACGwB,EAAMI,KAAI,SAACO,GACV,OACE,cAAC,EAAD,CACE/B,IAAK+B,EAAI3B,IACTF,KAAM6B,EAAI7B,KACVH,GAAIgC,EAAIhC,GACRD,YAAaD,GACRmC,gBCzEJC,MARf,WACE,OACE,qBAAKrC,UAAU,MAAf,SACE,cAAC,EAAD,O,MCANsC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8555373c.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Card(props) {\n  return (\n    <div className=\"card\" onClick={() => props.handleClick(props.id)}>\n      <img src={props.src} alt={props.name} />\n      <p>{props.name}</p>\n    </div>\n  );\n}\n\nexport default Card;\n","let images = [\n  { url: \"./images/Aragon.jpg\", name: \"Aragon\", clicked: false, id: 1 },\n  { url: \"./images/Bilbo.jpg\", name: \"Bilbo\", clicked: false, id: 2 },\n  { url: \"./images/Boromir.jpg\", name: \"Boromir\", clicked: false, id: 3 },\n  { url: \"./images/Frodo.jpg\", name: \"Frodo\", clicked: false, id: 4 },\n  { url: \"./images/Gandalf.jpg\", name: \"Gandalf\", clicked: false, id: 5 },\n  { url: \"./images/Gimli.jpg\", name: \"Gimli\", clicked: false, id: 6 },\n  {\n    url: \"./images/Legolas.PNG.webp\",\n    name: \"Legolas\",\n    clicked: false,\n    id: 7,\n  },\n  { url: \"./images/Merry.webp\", name: \"Merry\", clicked: false, id: 8 },\n  { url: \"./images/Pippin.webp\", name: \"Pippin\", clicked: false, id: 9 },\n  { url: \"./images/Sam.webp\", name: \"Sam\", clicked: false, id: 10 },\n  { url: \"./images/Sauron.jpg\", name: \"Sauron\", clicked: false, id: 11 },\n  { url: \"./images/Smeagol.jpg\", name: \"Smeagol\", clicked: false, id: 12 },\n  { url: \"./images/Saruman.webp\", name: \"Saruman\", clicked: false, id: 13 },\n  { url: \"./images/Theoden.jpg\", name: \"Theoden\", clicked: false, id: 14 },\n  {\n    url: \"./images/ThisGuy.webp\",\n    name: \"Grumpy Hobbit\",\n    clicked: false,\n    id: 15,\n  },\n  { url: \"./images/Eowyn.jpg\", name: \"Eowyn\", clicked: false, id: 16 },\n];\n\nexport default images;\n","export default function shuffle(array) {\n  // Based off golangprograms tutorial of memory game.\n  let currIndex = array.length;\n  let tempVal;\n  let randIndex;\n\n  while (0 !== currIndex) {\n    randIndex = Math.floor(Math.random() * currIndex);\n    currIndex -= 1;\n\n    tempVal = array[randIndex];\n    array[randIndex] = array[currIndex];\n    array[currIndex] = tempVal;\n  }\n  return array;\n}\n","import React from \"react\";\n\nfunction Scoreboard(props) {\n  return (\n    <div className=\"scoreboardCont\">\n      <div className=\"scoreboard\">\n        <div className=\"score\">\n          <p>\n            Score: <span>{props.score}</span>\n          </p>\n          <p>\n            High Score: <span>{props.highScore}</span>\n          </p>\n        </div>\n        <img src={\"./images/ring.png\"} alt=\"ring\" />\n      </div>\n    </div>\n  );\n}\n\nexport default Scoreboard;\n","import React, { useEffect, useState } from \"react\";\nimport Card from \"./Card\";\nimport uniqid from \"uniqid\";\nimport images from \"../misc/images\";\nimport shuffle from \"../misc/shuffle\";\nimport Scoreboard from \"./Scoreboard\";\n\nfunction GameContainer() {\n  const [cards, setCards] = useState(shuffle(images));\n  const [score, setScore] = useState(0);\n  const [highScore, setHighScore] = useState(0);\n\n  function onClick(id) {\n    setCards(\n      cards.map((card) => {\n        if (card.id === id && card.clicked === true) {\n          console.log(\"beep\");\n          restart();\n        } else if (card.id === id) {\n          console.log(\"boop\");\n          setScore(score + 1);\n          card.clicked = true;\n        }\n\n        return card;\n      })\n    );\n  }\n\n  function win() {\n    if (score === 16) {\n      alert(\"You've won eh! Congrats ðŸ¥³\");\n      restart();\n    }\n  }\n\n  function restart() {\n    if (score > highScore) {\n      setHighScore(score);\n    }\n    resetCards();\n    setScore(0);\n  }\n\n  function resetCards() {\n    setCards(\n      cards.map((card) => {\n        card.clicked = false;\n\n        return card;\n      })\n    );\n  }\n\n  useEffect(() => {\n    setCards(shuffle(cards));\n  }, [cards]);\n\n  useEffect(() => {\n    win();\n  });\n\n  return (\n    <div>\n      <div>\n        <header>\n          <div>\n            <h1>The Lord of the Memories</h1>\n            <h2>\n              Please select a character, but don't select the same one twice!\n            </h2>\n          </div>\n          <Scoreboard score={score} highScore={highScore} />\n        </header>\n      </div>\n      <div className=\"cardCont\">\n        {cards.map((img) => {\n          return (\n            <Card\n              src={img.url}\n              name={img.name}\n              id={img.id}\n              handleClick={onClick}\n              key={uniqid()}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default GameContainer;\n","import GameContainer from \"./Components/GameContainer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <GameContainer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./styles.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}